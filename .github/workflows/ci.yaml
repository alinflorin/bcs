name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  docker:
    runs-on: ${{ matrix.runs-on }}
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      matrix:
        include:
          - project: bcs-api
            runs-on: ubuntu-latest
            platform: linux/amd64
            suffix: -amd64
          - project: bcs-ui
            runs-on: ubuntu-latest
            platform: linux/amd64
            suffix: -amd64
          - project: bcs-api
            runs-on: ubuntu-24.04-arm
            platform: linux/arm64
            suffix: -arm64
          - project: bcs-ui
            runs-on: ubuntu-24.04-arm
            platform: linux/arm64
            suffix: -arm64
      max-parallel: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Restore Docker cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ matrix.project }}-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ matrix.project }}-${{ runner.os }}-

      - name: Build multi-arch Docker image with cache
        run: |
          echo "Building project: ${{ matrix.project }}${{ matrix.suffix }}"
          docker buildx build \
            --platform ${{ matrix.platform }} \
            -t ${{ matrix.project }}:${{ github.sha }}${{ matrix.suffix }} \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --build-arg VERSION=${{ github.sha }} \
            --load \
            ./src/${{ matrix.project }}

            
      - name: Scan image with Trivy and generate SARIF
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ${{ matrix.project }}:${{ github.sha }}${{ matrix.suffix }}
          format: sarif
          output: trivy-${{ matrix.project }}${{ matrix.suffix }}.sarif
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          exit-code: 0

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-${{ matrix.project }}${{ matrix.suffix }}.sarif

      - name: Save updated Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  codeql:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  helm:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.19.0

      - name: Cache Helm dependencies
        uses: actions/cache@v3
        with:
          path: src/chart/charts
          key: helm-deps-${{ runner.os }}-${{ hashFiles('src/chart/Chart.lock') }}
          restore-keys: |
            helm-deps-${{ runner.os }}-

      - name: Update Helm dependencies
        run: |
          echo "Updating Helm dependencies..."
          helm dependency update ./src/chart

      - name: Lint Helm chart
        run: |
          echo "Linting Helm chart..."
          helm lint ./src/chart

      - name: Template Helm chart
        run: |
          echo "Rendering Helm chart templates..."
          helm template ./src/chart

      - name: Package Helm chart
        run: |
          echo "Packaging Helm chart..."
          helm package ./src/chart --destination ./src/chart/dist

      - name: List packaged chart
        run: |
          echo "Packaged chart(s):"
          ls -l ./src/chart/dist

      - name: Scan Helm chart with Trivy and generate SARIF
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: config         # for Helm/K8s configs
          format: sarif
          output: trivy-helm.sarif
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          exit-code: 0              # donâ€™t fail the job
          input: ./src/chart 
        
      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-helm.sarif