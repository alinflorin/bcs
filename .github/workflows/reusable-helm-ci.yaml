name: Reusable Helm CI

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
      ci:
        type: boolean
        required: true

env:
  GHCR_ORG: ghcr.io/alinflorin

jobs:
  helm:
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.19.0

      - name: Cache Helm dependencies
        uses: actions/cache@v4
        with:
          path: src/chart/charts
          key: helm-deps-${{ runner.os }}-${{ hashFiles('src/chart/Chart.lock') }}
          restore-keys: |
            helm-deps-${{ runner.os }}-

      - name: Update Helm dependencies
        run: |
          echo "Updating Helm dependencies..."
          helm dependency update ./src/chart

      - name: Lint Helm chart
        run: |
          echo "Linting Helm chart..."
          helm lint ./src/chart

      - name: Template Helm chart
        run: |
          echo "Rendering Helm chart templates..."
          helm template ./src/chart

      - name: Package Helm chart
        if: ${{ inputs.ci == true }}
        run: |
          echo "Packaging Helm chart..."
          helm package ./src/chart --destination ./src/chart/dist

      - name: Package Helm chart
        if: ${{ inputs.ci == false }}
        run: helm package src/chart --destination src/chart/dist --version ${{ inputs.version }} --app-version ${{ inputs.version }} 

      - name: List packaged chart
        run: |
          echo "Packaged chart(s):"
          ls -l ./src/chart/dist

      - name: Log in to GHCR
        uses: docker/login-action@v3
        if: ${{ inputs.ci == false }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Helm chart to GHCR
        if: ${{ inputs.ci == false }}
        run: helm push src/chart/dist/*.tgz oci://$GHCR_ORG/charts

      - name: Scan Helm chart with Trivy and generate SARIF
        if: ${{ inputs.ci == true }}
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: config         # for Helm/K8s configs
          format: sarif
          output: trivy-helm.sarif
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          exit-code: 0              # donâ€™t fail the job
          input: ./src/chart 
        
      - name: Upload SARIF to GitHub
        if: ${{ inputs.ci == true }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-helm.sarif