name: Reusable Docker CI

on:
  workflow_call:
    inputs:
      project:
        type: string
        required: true

jobs:
  docker:
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]

    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Restore Docker cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ inputs.project }}-${{ matrix.platform }}-${{ github.ref_name }}
          restore-keys: |
            buildx-${{ inputs.project }}-${{ matrix.platform }}-

      - name: Build Docker image
        run: |
          suffix="-$(echo "${{ matrix.platform }}" | cut -d'/' -f2)"
          echo "Building project: ${{ inputs.project }}${suffix}"
          docker buildx build \
            --platform ${{ matrix.platform }} \
            -t ${{ inputs.project }}:${{ github.sha }}${suffix} \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --build-arg VERSION=${{ github.sha }} \
            --load \
            ./src/${{ inputs.project }}

      - name: Scan image with Trivy
        run: |
          suffix="-$(echo "${{ matrix.platform }}" | cut -d'/' -f2)"
          echo "Scanning ${{ inputs.project }}${suffix}"
          trivy image \
            --format sarif \
            --output trivy-${{ inputs.project }}${suffix}.sarif \
            --severity HIGH,CRITICAL \
            --ignore-unfixed \
            ${{ inputs.project }}:${{ github.sha }}${suffix} || true

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-${{ inputs.project }}-*.sarif

      - name: Save updated Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
