name: Draft Release Build Push Deploy

on:
  release:
    types: [prereleased]

env:
  GHCR_ORG: ghcr.io/alinflorin

jobs:
  discover-projects:
    if: ${{ github.event.release.target_commitish == 'main' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find BCS projects
        id: set-matrix
        run: |
          projects=$(find src -maxdepth 1 -type d -name "bcs-*" -printf '%f\n')
          json=$(echo "$projects" | jq -R . | jq -s -c '{project: .}')
          echo "matrix=$json" >> $GITHUB_OUTPUT

  docker:
    if: ${{ github.event.release.target_commitish == 'main' }}
    runs-on: ubuntu-latest
    needs: discover-projects
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover-projects.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get release version
        run: echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          echo "Building ${{ matrix.project }}..."
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --cache-from=type=gha \
            --cache-to=type=gha,mode=max \
            -t $GHCR_ORG/${{ matrix.project }}:${VERSION} \
            src/${{ matrix.project }} \
            --push

  helm:
    if: ${{ github.event.release.target_commitish == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.19.0

      - name: Cache Helm dependencies
        uses: actions/cache@v3
        with:
          path: src/chart/charts
          key: helm-deps-${{ runner.os }}-${{ hashFiles('src/chart/Chart.lock') }}
          restore-keys: |
            helm-deps-${{ runner.os }}-

      - name: Get release version
        run: |
          echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "APP_VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Update Helm dependencies
        run: helm dependency update src/chart

      - name: Package Helm chart
        run: helm package src/chart --destination src/chart/dist --version ${VERSION} --app-version ${APP_VERSION}

      - name: Push Helm chart to GHCR
        run: helm push src/chart/dist/*.tgz oci://$GHCR_ORG/bcs/charts
